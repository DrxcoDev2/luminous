
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    // --- User Settings ---
    // Anyone can read user settings (to find users by email).
    // Users can only write to their own settings, UNLESS a team owner is modifying the teamId.
    match /userSettings/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && 
        (
          // Allow user to write to their own settings
          request.auth.uid == userId
          ||
          // Allow a team owner to update a user's teamId
          (
            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['teamId']) &&
            get(/databases/$(database)/documents/teams/$(request.resource.data.teamId)).data.ownerId == request.auth.uid
          )
           ||
          // Allow a team owner to remove a user's teamId
          (
            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['teamId']) &&
            get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.ownerId == request.auth.uid
          )
        );
    }

    // --- Teams ---
    // Users can read a team's data if they are a member.
    // Only the owner can update the team document (add/remove members).
    match /teams/{teamId} {
      allow read: if isSignedIn() && request.auth.uid in resource.data.members.map(member => member.uid);
      allow update: if isSignedIn() && request.auth.uid == resource.data.ownerId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.ownerId;
    }

    // --- Clients ---
    // Users can access clients if they are the creator or if they belong to the client's team.
    match /clients/{clientId} {
      allow read, write, delete: if isSignedIn() && 
        (
          // Allow access if user is the creator
          request.auth.uid == resource.data.userId
          ||
          // Allow access if user is on the same team as the client
          (
            resource.data.teamId != null &&
            get(/databases/$(database)/documents/userSettings/$(request.auth.uid)).data.teamId == resource.data.teamId
          )
        );
      allow create: if isSignedIn();
    }
    
    // --- Client Notes (Subcollection) ---
    match /clients/{clientId}/notes/{noteId} {
        allow read, write, delete: if isSignedIn() &&
        (
          // Check parent client permissions
          get(/databases/$(database)/documents/clients/$(clientId)).data.userId == request.auth.uid
          ||
          (
             get(/databases/$(database)/documents/clients/$(clientId)).data.teamId != null &&
             get(/databases/$(database)/documents/userSettings/$(request.auth.uid)).data.teamId == get(/databases/$(database)/documents/clients/$(clientId)).data.teamId
          )
        );
        allow create: if isSignedIn();
    }


    // --- Feedback ---
    // Any authenticated user can submit feedback.
    // Only the admin can read feedback.
    match /feedback/{feedbackId} {
      allow create: if isSignedIn();
      allow read: if isSignedIn() && request.auth.token.email == 'cristianmupe2021@gmail.com';
    }

    // --- Mail ---
    // This allows the "Trigger Email" extension to work.
    // Any authenticated user can create a document in the 'mail' collection.
    match /mail/{mailId} {
      allow create: if isSignedIn();
    }
  }
}
